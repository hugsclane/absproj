---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import {SITE_TITLE,SITE_DESCRIPTION} from "../consts";
---


<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={"Data Search"} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
      <aside class="form">
          <div>
            <label for="search"> Search dataflowid</label>
            <span>Enter a search term to search the dataflowid field</span>
          </div>
          <input
              type="search"
              required
              min="2"
              max="24"
              value=""
              name="search"
              id="search"
              placeholder="Enter a search term"
              />

      </aside>
      <p id="searchReadout"></p>
			<section aria-label="Search Results">
        <ul id="searchResults"></ul>
			</section>
		</main>
		<Footer />
    <script >
      import DOMPurify from "dompurify";
      import Fuse from "fuse.js";

      const SPINNER =` <svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <style>
        .spinner_ajPY{transform-origin:center;animation:spinner_AtaB
        .75s infinite linear}@keyframes spinner_AtaB{100%{transform:rotate(360deg)}}
        </style>
        <path d="M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z" opacity=".25"/>
        <path d="M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0 ,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z" class="spinner_ajPY"/>
      </svg>`

      let SEARCH_DATA;
      let FUSE_INSTANCE;
      const FUSE_OPTIONS ={

      inclueScore: true,
      shouldSort: true,
      threshold: 0.6,
      keys: [
          {
            name : "id",
            weight: 1,
          },
          // {
          //   name : "description",
          //   weight: 0.7,
          // },
          // {
          //   name: "annotations",
          //   weight: 0.7,
          // }
        ]
      }

      const search = document.querySelector("#search");
      const searchReadout = document.querySelector("#searchReadout");
      const searchResults = document.querySelector("#searchResults");

      async function fetchSearchResults(search){
        if (search.length === 0) return;
        // searchResults.innerHTML = SPINNER;
        if (!SEARCH_DATA) {
          try{
            const res = await fetch("/search.json");
            if (!res.ok){
                throw new Error("Something went wrong... please try again");
              }
              const data = await res.json();
              SEARCH_DATA = data;
            }
            catch(e)
            {
              console.error(e);
            }
            }
        if (SEARCH_DATA && !FUSE_INSTANCE){
        FUSE_INSTANCE = new Fuse(SEARCH_DATA,FUSE_OPTIONS);
        }
        if(!FUSE_INSTANCE) return;
        const searchResults = FUSE_INSTANCE.search(search);
        console.log(search,": fetchSearchResults ~ data:", searchResults);
      }


      function updateDocumentTitle(search) {
        document.title = search ? `Search results for "${search}"` : "search abs stats";
      }
      function updateSearchReadout(search) {
       searchReadout.textContent = search ? `Search results for "${search}"` : "";
      }

      window.addEventListener("DOMContentLoaded", () =>
            {
              const urlParams =
              DOMPurify.sanitize(
              new URLSearchParams(window.location.search).get("q")
              );

            fetchSearchResults(urlParams);
            updateDocumentTitle(urlParams);
            updateSearchReadout(urlParams);
            search.value = urlParams;
            search.focus();
            }
            );

      search.addEventListener("input", () =>
      {
        const searchTerm =  DOMPurify.sanitize(search.value);

      updateDocumentTitle(searchTerm);
      updateSearchReadout(searchTerm);
      });
    </script>
	</body>
</html>
